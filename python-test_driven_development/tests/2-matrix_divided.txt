The ``2-matrix_divided`` module
==============================

Using ``matrix_divided`` function
---------------------------------

First, import the function:
    >>> matrix_divided = __import__('2-matrix_divided').matrix_divided

Basic division:
    >>> matrix = [[1, 2, 3], [4, 5, 6]]
    >>> matrix_divided(matrix, 3)
    [[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

Verify original matrix is unchanged:
    >>> matrix
    [[1, 2, 3], [4, 5, 6]]

Division with float divisor:
    >>> matrix_divided(matrix, 2.5)
    [[0.4, 0.8, 1.2], [1.6, 2.0, 2.4]]

Single-row matrix:
    >>> matrix_divided([[1, 2, 3]], 2)
    [[0.5, 1.0, 1.5]]

Matrix with float elements:
    >>> matrix = [[1.5, 2.5, 3.5], [4.5, 5.5, 6.5]]
    >>> matrix_divided(matrix, 2)
    [[0.75, 1.25, 1.75], [2.25, 2.75, 3.25]]

Error cases:
Invalid matrix (not a list):
    >>> matrix_divided("not a matrix", 2)
    Traceback (most recent call last):
        ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

Invalid matrix (contains non-numbers):
    >>> matrix_divided([[1, 2, 3], [4, "five", 6]], 2)
    Traceback (most recent call last):
        ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

Rows of different lengths:
    >>> matrix_divided([[1, 2], [3, 4, 5]], 2)
    Traceback (most recent call last):
        ...
    TypeError: Each row of the matrix must have the same size

Invalid divisor (not a number):
    >>> matrix_divided([[1, 2, 3]], "two")
    Traceback (most recent call last):
        ...
    TypeError: div must be a number

Division by zero:
    >>> matrix_divided([[1, 2, 3]], 0)
    Traceback (most recent call last):
        ...
    ZeroDivisionError: division by zero
